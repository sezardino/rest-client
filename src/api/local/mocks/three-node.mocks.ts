import type { ThreeNode } from "@/api/api.entity";
import { MOCKS_IDS_CONSTANTS } from "./mocks.const";

export const MOCK_LOCAL_THREE_NODES: ThreeNode[] = [
  {
    id: MOCKS_IDS_CONSTANTS.AUTHENTICATION_NODE_ID,
    type: "node",
    name: "Authentication",
    order: 1,
    parentId: null,
    remoteCallId: null,
  },
  {
    id: MOCKS_IDS_CONSTANTS.USERS_NODE_ID,
    type: "node",
    name: "Users",
    order: 2,
    parentId: null,
    remoteCallId: null,
  },
  {
    id: MOCKS_IDS_CONSTANTS.LOGIN_NODE_ID,
    type: "remoteCall",
    name: "Login",
    order: 1,
    parentId: MOCKS_IDS_CONSTANTS.AUTHENTICATION_NODE_ID,
    remoteCallId: MOCKS_IDS_CONSTANTS.LOGIN_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.REGISTRATION_NODE_ID,
    type: "remoteCall",
    name: "Registration",
    order: 2,
    parentId: MOCKS_IDS_CONSTANTS.AUTHENTICATION_NODE_ID,
    remoteCallId: MOCKS_IDS_CONSTANTS.REGISTRATION_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.REFRESH_TOKENS_NODE_ID,
    type: "remoteCall",
    name: "Refresh tokens",
    order: 3,
    parentId: MOCKS_IDS_CONSTANTS.AUTHENTICATION_NODE_ID,
    remoteCallId: MOCKS_IDS_CONSTANTS.REFRESH_TOKENS_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.GET_USER_NODE_ID,
    type: "remoteCall",
    name: "Get user",
    order: 1,
    parentId: MOCKS_IDS_CONSTANTS.USERS_NODE_ID,
    remoteCallId: MOCKS_IDS_CONSTANTS.GET_USER_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.GET_USERS_NODE_ID,
    type: "remoteCall",
    name: "Get users",
    order: 2,
    parentId: MOCKS_IDS_CONSTANTS.USERS_NODE_ID,
    remoteCallId: MOCKS_IDS_CONSTANTS.GET_USERS_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.CREATE_USER_NODE_ID,
    type: "remoteCall",
    name: "Create user",
    order: 3,
    parentId: MOCKS_IDS_CONSTANTS.USERS_NODE_ID,
    remoteCallId: MOCKS_IDS_CONSTANTS.CREATE_USER_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.UPDATE_USER_NODE_ID,
    type: "remoteCall",
    name: "Update user",
    order: 4,
    parentId: MOCKS_IDS_CONSTANTS.USERS_NODE_ID,
    remoteCallId: MOCKS_IDS_CONSTANTS.UPDATE_USER_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.DELETE_USER_NODE_ID,
    type: "remoteCall",
    name: "Delete user",
    order: 5,
    parentId: MOCKS_IDS_CONSTANTS.USERS_NODE_ID,
    remoteCallId: MOCKS_IDS_CONSTANTS.DELETE_USER_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.HEALTH_NODE_ID,
    type: "remoteCall",
    name: "Health Check",
    order: 3,
    parentId: null,
    remoteCallId: MOCKS_IDS_CONSTANTS.HEALTH_CHECK_REQUEST_ID,
  },
  {
    id: MOCKS_IDS_CONSTANTS.SERVER_INFO_NODE_ID,
    type: "remoteCall",
    name: "Server Info",
    order: 4,
    parentId: null,
    remoteCallId: MOCKS_IDS_CONSTANTS.SERVER_INFO_REQUEST_ID,
  },
];
